{"version":3,"sources":["components/form.js","components/weather.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","className","onSubmit","getWeather","autocomplete","type","placeholder","name","Weather","error","city","cond","src","img","alt","press","temp","speed","mess","API_key","App","state","isloading","undefined","country","sunrise","sunset","getWeatherGeo","e","a","fetch","api_url_geo","json","data_geo","console","log","geo_city","api_url","data","cod","setState","timeConverter","UNIX_timestamp","Date","hour","getHours","min","getMinutes","sec","getSeconds","substr","rand","max","Math","floor","random","getRandomInt","sys","sunset_date","sunrise_date","pressure","main","pressureInMmHg","message","cond_info","weather","info_img","icon","description","wind","preventDefault","target","elements","value","replace","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.13991159.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = (props) =>{\r\nreturn(\r\n    <div className=\"wrapper\">\r\n    <div className=\"form\">\r\n        <form onSubmit={props.getWeather }  >\r\n            <input autocomplete=\"off\" type=\"text\" placeholder=\"Введите город\" name=\"city\" ></input>\r\n            <button >Нажать</button>\r\n        </form>\r\n    </div>\r\n    </div>\r\n)\r\n}\r\nexport default Form;\r\n","import React from 'react'\r\n\r\nconst Weather =(props) => {\r\n    return(\r\n        <div className=\"wrapper\">\r\n\r\n            {!props.error && \r\n            <div className=\"weather_info\">\r\n                \r\n                <div className=\"top_info\">\r\n                <p>{props.city} </p>\r\n                <p>{props.cond}</p>\r\n                </div>\r\n                <img src={props.img} alt=\"img\"></img>\r\n                <div className=\"bot_info\">\r\n                <p>{props.press} мм</p>\r\n                <p>{props.temp}° </p>\r\n                <p>{props.speed} м.с </p>\r\n                </div>\r\n                <div className=\"message\">\r\n                <p>{props.mess} :)</p>\r\n                </div>  \r\n\r\n            </div>\r\n            }\r\n        \r\n            <p>{props.error}</p>\r\n         </div>\r\n        \r\n    );\r\n}\r\nexport default Weather;\r\n\r\n","import React  from 'react';\nimport './reset.css';\nimport './App.css';\nimport Form from './components/form';\nimport Weather from './components/weather';\n\nconst API_key=\"04719acab8cc065e3fe241978a3f4175\";\n\nclass App extends React.Component{\n  \n  state={\n    isloading:false,\n    temp:undefined,\n    cond:undefined,\n    speed:undefined,\n    img:undefined,\n    mess:undefined,\n    press:undefined,\n    city:undefined,\n    country:undefined,\n    sunrise:undefined,\n    sunset:undefined,\n    error:\"Город не найден\"\n  }\n  \n  getWeatherGeo = async (e) =>{\n    \n    const api_url_geo= await fetch(`https://geolocation-db.com/json/697de680-a737-11ea-9820-af05f4014d91`);\n\n    const data_geo = await api_url_geo.json();\n    console.log(data_geo);\n     const geo_city =data_geo.city;\n\n    const api_url= await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${geo_city}&appid=${API_key}&lang=ru&units=metric`);\n  const data = await api_url.json();\n  console.log(data);\n    if(data.cod===\"404\"){\n      this.setState({\n        error:\"Город не найден :(\"\n      });\n    }\n    else{\n      function getRandomInt(max) {\n        return Math.floor(Math.random() * Math.floor(3));\n      }\n      let rand =getRandomInt();\n      console.log(rand)\n  function timeConverter(UNIX_timestamp){\n    let a = new Date(UNIX_timestamp * 1000);\n    let hour = a.getHours();\n    let min = \"0\" + a.getMinutes();\n    let sec = \"0\" + a.getSeconds();\n    let time = hour + ':' + min.substr(-2) + ':' + sec.substr(-2) ;\n    return time;\n  }\n      let sunset = data.sys.sunset,\n      sunrise = data.sys.sunrise;\n      let sunset_date = timeConverter(sunset);\n      let sunrise_date = timeConverter(sunrise);\n      let pressure = data.main.pressure;\n      let pressureInMmHg = Math.floor(pressure * 0.75006);\n\n      let message=\"Удачного дня\";\n      let cond_info =data.weather[0].main;\n      let info_img=\"media/\"+data.weather[0].icon+\".svg\";\n      console.log(info_img);\n      // if(data.main.temp<0){\n      //   message=\"Надень шапочку\";\n        \n      // }\n\n      if(cond_info===\"Clear\"){\n        if(rand===0){\n          message=\"Удачного дня\";\n        }\n        if(rand===1){\n          message=\"Редко увидишь чистое небо\";\n        }\n        if(rand===2){\n          message=\"Какое чистое небо\";\n        }\n      }\n\n      if(cond_info===\"Clouds\"){\n        if(rand===0){\n          message=\"Посмотри какие красивые облака\";\n        }\n        if(rand===1){\n          message=\"Облака, белогривые лошадки\";\n        }\n        if(rand===2){\n          message=\"там облако похоже на ракету\";\n        }\n      }\n\n      if(cond_info===\"Rain\"){\n        if(rand===0){\n          message=\"Возьми зонтик\";\n        }\n        if(rand===1){\n          message=\"Думаю надо взять зонтик\";\n        }\n        if(rand===2){\n          message=\"Не промокни на улице\";\n        }\n      }\n\n      if(cond_info===\"Show\"){\n        if(rand===0){\n          message=\"Не забудь шапку\";\n        }\n        if(rand===1){\n          message=\"Готовь снежки к сражению\";\n        }\n        if(rand===2){\n          message=\"Близится восстание снеговиков\";\n        }\n      }\n\n\n      if(cond_info===\"Mist\"){\n        if(rand===0){\n          message=\"Лёгкая туманность\";\n        }\n        if(rand===1){\n          message=\"Кто ёжика потерял\";\n        }\n        if(rand===2){\n          message=\"Лошааадка\";\n        }\n      }\n\n      if(cond_info===\"Smoke\"){\n        if(rand===0){\n          message=\"Возьми маску\";\n        }\n        if(rand===1){\n          message=\"Фу, какой запах\";\n        }\n        if(rand===2){\n          message=\"Стоит ли выходить на улицу\";\n        }\n      }\n\n      if(cond_info===\"Fog\"){\n        if(rand===0){\n          message=\"Снуп дог где-то рядом\";\n        }\n        if(rand===1){\n          message=\"Смотри не заблудись\";\n        }\n        if(rand===2){\n          message=\"Я видел фильм, который начинался так же\";\n        }\n      }\n\n      if(cond_info===\"Haze\"){\n        if(rand===0){\n          message=\"Я бы не выходил на улицу\";\n        }\n        if(rand===1){\n          message=\"Возьми маску\";\n        }\n        if(rand===2){\n          message=\"Фу, какой запах\";\n        }\n      }\n      if(cond_info===\"Dust\"){\n        if(rand===0){\n          message=\"Стоит взять очки\";\n        }\n        if(rand===1){\n          message=\"Береги глаза и лёгкии\";\n        }\n        if(rand===2){\n          message=\"Стоит взять очки\";\n        }\n      }\n\n      if(cond_info===\"Sand\"){\n        if(rand===0){\n          message=\"Возьми очки\";\n        }\n        if(rand===1){\n          message=\"Береги глаза и лёгкии\";\n        }\n        if(rand===2){\n          message=\"Береги глаза и лёгкии\";\n        }\n      }\n\n      if(cond_info===\"Ash\"){\n        if(rand===0){\n          message=\"Будь аккуратен\";\n        }\n        if(rand===1){\n          message=\"Береги глаза и лёгкии\";\n        }\n        if(rand===2){\n          message=\"Береги глаза и лёгкии\";\n        }\n      }\n\n      if(cond_info===\"Squall\"){\n        if(rand===0){\n          message=\"Тебя не сдует\";\n        }\n        if(rand===1){\n          message=\"Возьми с собой что-нибудь тяжёлое\";\n        }\n        if(rand===2){\n          message=\"Я бы сидел дома\";\n        }\n      }\n\n      if(cond_info===\"Tornado\"){\n        if(rand===0){\n          message=\"Сиди дома, смотри новости\";\n        }\n        if(rand===1){\n          message=\"Включи новости, будь осторожен\";\n        }\n        if(rand===2){\n          message=\"Я бы сидел дома\";\n        }\n      }\n\n      if(cond_info===\"Thunderstorm\"){\n        if(rand===0){\n          message=\"Не гневи богов\";\n        }\n        if(rand===1){\n          message=\"Зевс играет в игру\";\n        }\n        if(rand===2){\n          message=\"И помни два раза в одно место не бьёт\";\n        }\n      }\n      \n\n  this.setState({\n    temp: data.main.temp,\n    cond: data.weather[0].description,\n    speed: data.wind.speed,\n    mess:message,\n    isloading:true,\n    img:info_img,\n    press: pressureInMmHg,\n    city: data.name,\n    country:data.sys.country,\n    sunrise:sunrise_date,\n    sunset: sunset_date,\n    error:\"\"\n  });\n    }\n  }\n  componentDidMount() {\n\n    this.getWeatherGeo()\n  }\n\n  getWeather = async (e) =>{\n  e.preventDefault();\n  let city =  e.target.elements.city.value;\n  city =city.replace(/\\s/g, '');\n  e.target.elements.city.value=\"\";\n  const api_url= await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_key}&lang=ru&units=metric`);\n  const data = await api_url.json();\n  console.log(data);\n    if( city===\"\" || data.cod===\"404\"){\n      this.setState({\n        error:\"Город не найден :(\"\n      });\n    }\n    else{\n      function getRandomInt(max) {\n        return Math.floor(Math.random(1) * Math.floor(4));\n      }\n      let rand =getRandomInt();\n      console.log(rand)\n  function timeConverter(UNIX_timestamp){\n    let a = new Date(UNIX_timestamp * 1000);\n    let hour = a.getHours();\n    let min = \"0\" + a.getMinutes();\n    let sec = \"0\" + a.getSeconds();\n    let time = hour + ':' + min.substr(-2) + ':' + sec.substr(-2) ;\n    return time;\n  }\n      let sunset = data.sys.sunset,\n      sunrise = data.sys.sunrise;\n      let sunset_date = timeConverter(sunset);\n      let sunrise_date = timeConverter(sunrise);\n      let pressure = data.main.pressure;\n      let pressureInMmHg = Math.floor(pressure * 0.75006);\n      let info_img=\"media/\"+data.weather[0].icon+\".svg\";\n      let message=\"Удачного дня\";\n      let cond_info =data.weather[0].main;\n\n      if(cond_info===\"Clear\"){\n        if(rand===0){\n          message=\"Удачного дня\";\n        }\n        if(rand===1){\n          message=\"Редко увидишь чистое небо\";\n        }\n        if(rand===2){\n          message=\"Какое чистое небо\";\n        }\n      }\n\n      if(cond_info===\"Clouds\"){\n        if(rand===0){\n          message=\"Посмотри какие красивые облака\";\n        }\n        if(rand===1){\n          message=\"Облака, белогривые лошадки\";\n        }\n        if(rand===2){\n          message=\"там облако похоже на ракету\";\n        }\n      }\n\n      if(cond_info===\"Rain\"){\n        if(rand===0){\n          message=\"Возьми зонтик\";\n        }\n        if(rand===1){\n          message=\"Думаю надо взять зонтик\";\n        }\n        if(rand===2){\n          message=\"Не промокни на улице\";\n        }\n      }\n\n      if(cond_info===\"Show\"){\n        if(rand===0){\n          message=\"Не забудь шапку\";\n        }\n        if(rand===1){\n          message=\"Готовь снежки к сражению\";\n        }\n        if(rand===2){\n          message=\"Близится восстание снеговиков\";\n        }\n      }\n\n\n      if(cond_info===\"Mist\"){\n        if(rand===0){\n          message=\"Лёгкая туманность\";\n        }\n        if(rand===1){\n          message=\"Кто ёжика потерял\";\n        }\n        if(rand===2){\n          message=\"Лошааадка\";\n        }\n      }\n\n      if(cond_info===\"Smoke\"){\n        if(rand===0){\n          message=\"Возьми маску\";\n        }\n        if(rand===1){\n          message=\"Фу, какой запах\";\n        }\n        if(rand===2){\n          message=\"Стоит ли выходить на улицу\";\n        }\n      }\n\n      if(cond_info===\"Fog\"){\n        if(rand===0){\n          message=\"Снуп дог где-то рядом\";\n        }\n        if(rand===1){\n          message=\"Смотри не заблудись\";\n        }\n        if(rand===2){\n          message=\"Я видел фильм, который начинался так же\";\n        }\n      }\n\n      if(cond_info===\"Haze\"){\n        if(rand===0){\n          message=\"Я бы не выходил на улицу\";\n        }\n        if(rand===1){\n          message=\"Возьми маску\";\n        }\n        if(rand===2){\n          message=\"Фу, какой запах\";\n        }\n      }\n      if(cond_info===\"Dust\"){\n        if(rand===0){\n          message=\"Стоит взять очки\";\n        }\n        if(rand===1){\n          message=\"Береги глаза и лёгкии\";\n        }\n        if(rand===2){\n          message=\"Стоит взять очки\";\n        }\n      }\n\n      if(cond_info===\"Sand\"){\n        if(rand===0){\n          message=\"Возьми очки\";\n        }\n        if(rand===1){\n          message=\"Береги глаза и лёгкии\";\n        }\n        if(rand===2){\n          message=\"Береги глаза и лёгкии\";\n        }\n      }\n\n      if(cond_info===\"Ash\"){\n        if(rand===0){\n          message=\"Будь аккуратен\";\n        }\n        if(rand===1){\n          message=\"Береги глаза и лёгкии\";\n        }\n        if(rand===2){\n          message=\"Береги глаза и лёгкии\";\n        }\n      }\n\n      if(cond_info===\"Squall\"){\n        if(rand===0){\n          message=\"Тебя не сдует\";\n        }\n        if(rand===1){\n          message=\"Возьми с собой что-нибудь тяжёлое\";\n        }\n        if(rand===2){\n          message=\"Я бы сидел дома\";\n        }\n      }\n\n      if(cond_info===\"Tornado\"){\n        if(rand===0){\n          message=\"Сиди дома, смотри новости\";\n        }\n        if(rand===1){\n          message=\"Включи новости, будь осторожен\";\n        }\n        if(rand===2){\n          message=\"Я бы сидел дома\";\n        }\n      }\n\n      if(cond_info===\"Thunderstorm\"){\n        if(rand===0){\n          message=\"Не гневи богов\";\n        }\n        if(rand===1){\n          message=\"Зевс играет в игру\";\n        }\n        if(rand===2){\n          message=\"И помни два раза в одно место не бьёт\";\n        }\n      }\n      \n\n\n  this.setState({\n    isloading:true,\n    temp: data.main.temp,\n    cond: data.weather[0].description,\n    speed: data.wind.speed,\n    mess: message,\n    img:info_img,\n    press: pressureInMmHg,\n    city: data.name,\n    country:data.sys.country,\n    sunrise:sunrise_date,\n    sunset: sunset_date,\n    error:\"\"\n  });\n    }\n    \n      \n  \n\n}\n  render(){\n    return(\n      <div className=\"app\">\n        {!this.state.isloading ? <div className=\"preLoader\"><div className=\"loader\"></div></div>: null}\n        <Weather \n        temp={this.state.temp}\n        cond={this.state.cond}\n        speed={this.state.speed}\n        \n        mess={this.state.mess}\n        img={this.state.img}\n        press={this.state.press}\n        city={this.state.city}\n        country={this.state.country}\n        sunrise={this.state.sunrise}\n        sunset={this.state.sunset}\n        error={this.state.error}></Weather>\n       <Form getWeather={this.getWeather}\n        ></Form>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}